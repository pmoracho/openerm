#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Openerm documentation build configuration file, created by
# sphinx-quickstart on Mon Sep 12 17:42:58 2016.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import sys

# sys.path.append(os.path.abspath('../../openerm'))
# sys.path.append('D:\pm\Data\git.repo\openerm\openerm')
sys.path.append('.')
sys.path.append('..')
sys.path.append('../openerm')
sys.path.append('../tools')


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.

extensions = [
	'sphinx.ext.autodoc',
	'sphinx.ext.doctest',
	'sphinx.ext.viewcode',
	'sphinx.ext.napoleon',
	'rinoh.frontend.sphinx'
]
pdf_documents = [('index', u'rst2pdf', u'Sample rst2pdf doc', u'Your Name'), ]

divparams_enable_postprocessing = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
#
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'Openerm'
copyright = '2016, Patricio Moracho'
author = 'Patricio Moracho'

rinoh_documents = [('index',            	# top-level file (index.rst)
                    'target',           	# output (target.pdf)
                    'OpenErm', 				# document title
                    'Patricio Moracho')]   	# document author

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '0.1'
# The full version, including alpha/beta/rc tags.
release = '0.1'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'es'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#
# today = ''
#
# Else, today_fmt is used as the format for a strftime call.
#
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
#
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# import sphinx_readable_theme
# html_theme_path = [sphinx_readable_theme.get_html_theme_path()]

# import sphinx_adc_theme
# html_theme_path = [sphinx_adc_theme.get_html_theme_path()]

# import sphinx_nameko_theme
# html_theme_path = [sphinx_nameko_theme.get_html_theme_path()]

# html_theme = 'alabaster'
# html_theme = 'haiku'
# html_theme = 'sphinx_rtd_theme'
# html_theme = 'classic'
# html_theme = 'bizstyle'
# html_theme = 'cloud'

# html_theme = 'readable'
# html_theme = "sphinx_adc_theme"
# html_theme = 'nameko'

# import guzzle_sphinx_theme

# # Adds an HTML table visitor to apply Bootstrap table classes
# html_translator_class		= 'guzzle_sphinx_theme.HTMLTranslator'
# html_theme_path		= guzzle_sphinx_theme.html_theme_path()
# html_theme				= 'guzzle_sphinx_theme'

# # Register the theme as an extension to generate a sitemap.xml
# extensions.append("guzzle_sphinx_theme")

# # Guzzle theme options (see theme.conf for more information)
# html_theme_options = {
#	  # Set the name of the project to appear in the sidebar
#	  "project_nav_name": "OpenERM",
# }


import solar_theme
html_theme = 'solar_theme'
html_theme_path = [solar_theme.theme_path]


# import hbp_sphinx_theme
# html_theme = "hbp_sphinx_theme"
# html_theme_path = [hbp_sphinx_theme.get_html_theme_path()]
# -- HTML theme options for `basicstrap` style -------

# html_theme = 'basicstrap'
# html_theme_options = {

#	  # Set the lang attribute of the html tag. Defaults to 'en'
#	  'lang': 'es',
#	  # Disable showing the sidebar. Defaults to 'false'
#	  'nosidebar': False,
#	  # Show header searchbox. Defaults to false. works only "nosidber=True",
#	  'header_searchbox': False,

#	  # Put the sidebar on the right side. Defaults to false.
#	  'rightsidebar': False,
#	  # Set the width of the sidebar. Defaults to 3
#	  'sidebar_span': 3,

#	  # Fix navbar to top of screen. Defaults to true
#	  'nav_fixed_top': True,
#	  # Fix the width of the sidebar. Defaults to false
#	  'nav_fixed': False,
#	  # Set the width of the sidebar. Defaults to '900px'
#	  'nav_width': '900px',
#	  # Fix the width of the content area. Defaults to false

#	  'content_fixed': False,
#	  # Set the width of the content area. Defaults to '900px'
#	  'content_width': '900px',
#	  # Fix the width of the row. Defaults to false
#	  'row_fixed': False,

#	  # Disable the responsive design. Defaults to false
#	  'noresponsive': False,
#	  # Disable the responsive footer relbar. Defaults to false
#	  'noresponsiverelbar': False,
#	  # Disable flat design. Defaults to false.
#	  # Works only "bootstrap_version = 3"
#	  'noflatdesign': False,

#	  # Enable Google Web Font. Defaults to false
#	  'googlewebfont': False,
#	  # Set the URL of Google Web Font's CSS.
#	  # Defaults to 'http://fonts.googleapis.com/css?family=Text+Me+One'
#	  'googlewebfont_url': 'http://fonts.googleapis.com/css?family=Lily+Script+One',  # NOQA
#	  # Set the Style of Google Web Font's CSS.
#	  # Defaults to "font-family: 'Text Me One', sans-serif;"
#	  'googlewebfont_style': u"font-family: 'Lily Script One' cursive;",

#	  # Set 'navbar-inverse' attribute to header navbar. Defaults to false.
#	  'header_inverse': False,
#	  # Set 'navbar-inverse' attribute to relbar navbar. Defaults to false.
#	  'relbar_inverse': False,

#	  # Enable inner theme by Bootswatch. Defaults to false
#	  'inner_theme': False,

#	  # Set the name of innner theme. Defaults to 'bootswatch-simplex'
#	'header_inverse': True,
#	'relbar_inverse': True,
#	'inner_theme': True,
#	  'inner_theme_name': 'bootswatch-flatly',

#	  # Select Twitter bootstrap version 2 or 3. Defaults to '3'
#	  'bootstrap_version': '3',

#	  # Show "theme preview" button in header navbar. Defaults to false.
#	  'theme_preview': False,

#	  # Set the Size of Heading text. Defaults to None
#	  # 'h1_size': '3.0em',
#	  # 'h2_size': '2.6em',
#	  # 'h3_size': '2.2em',
#	  # 'h4_size': '1.8em',
#	  # 'h5_size': '1.4em',
#	  # 'h6_size': '1.1em',
# }


def setup(app):
	app.add_stylesheet('theme_overrides.css')

# Theme options are theme-specific and customize the look and feel of a theme
# further.	For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
#
# html_title = 'Openerm v0.1'

# A shorter title for the navigation bar.  Default is the same as html_title.
#
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#
# html_logo = None

# The name of an image file (relative to this directory) to use as a favicon of
# the docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#
# html_extra_path = []

# If not None, a 'Last updated on:' timestamp is inserted at every page
# bottom, using the given strftime format.
# The empty string is equivalent to '%b %d, %Y'.
#
# html_last_updated_fmt = None

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#
# html_additional_pages = {}

# If false, no module index is generated.
#
# html_domain_indices = True

# If false, no index is generated.
#
# html_use_index = True

# If true, the index is split into individual pages for each letter.
#
# html_split_index = False

# If true, links to the reST sources are added to the pages.
#
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#	'da', 'de', 'en', 'es', 'fi', 'fr', 'h', 'it', 'ja'
#	'nl', 'no', 'pt', 'ro', 'r', 'sv', 'tr', 'zh'
#
# html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# 'ja' uses this config value.
# 'zh' user can custom change `jieba` dictionary path.
#
# html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#
# html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'Openermdoc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
	 # The paper size ('letterpaper' or 'a4paper').
	 #
	 # 'papersize': 'letterpaper',

	 # The font size ('10pt', '11pt' or '12pt').
	 #
	 # 'pointsize': '10pt',

	 # Additional stuff for the LaTeX preamble.
	 #
	 # 'preamble': '',

	 # Latex figure (float) alignment
	 #
	 # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
	(master_doc, 'Openerm.tex', 'Openerm Documentation',
	 'Patricio Moracho', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#
# latex_use_parts = False

# If true, show page references after internal links.
#
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
#
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
#
# latex_appendices = []

# It false, will not define \strong, \code,		itleref, \crossref ... but only
# \sphinxstrong, ..., \sphinxtitleref, ... To help avoid clash with user added
# packages.
#
# latex_keep_old_macro_names = True

# If false, no module index is generated.
#
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
	(master_doc, 'openerm', 'Openerm Documentation',
	 [author], 1)
]

# If true, show URL addresses after external links.
#
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
	(master_doc, 'Openerm', 'Openerm Documentation',
	 author, 'Openerm', 'One line description of project.',
	 'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#
# texinfo_appendices = []

# If false, no module index is generated.
#
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#
# texinfo_no_detailmenu = False


# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The basename for the epub file. It defaults to the project name.
# epub_basename = project

# The HTML theme for the epub output. Since the default themes are not
# optimized for small screen space, using the same theme for HTML and epub
# output is usually not wise. This defaults to 'epub', a theme designed to save
# visual space.
#
# epub_theme = 'epub'

# The language of the text. It defaults to the language option
# or 'en' if the language is not set.
#
# epub_language = ''

# The scheme of the identifier. Typical schemes are ISBN or URL.
# epub_scheme = ''

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A tuple containing the cover image and cover page html template filenames.
#
# epub_cover = ()

# A sequence of (type, uri, title) tuples for the guide element of content.opf.
#
# epub_guide = ()

# HTML files that should be inserted before the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#
# epub_pre_files = []

# HTML files that should be inserted after the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#
# epub_post_files = []

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

# The depth of the table of contents in toc.ncx.
#
# epub_tocdepth = 3

# Allow duplicate toc entries.
#
# epub_tocdup = True

# Choose between 'default' and 'includehidden'.
#
# epub_tocscope = 'default'

# Fix unsupported image types using the Pillow.
#
# epub_fix_images = False

# Scale large images.
#
# epub_max_image_width = 0

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#
# epub_show_urls = 'inline'

# If false, no index is generated.
#
# epub_use_index = True
