<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Config</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <span class="target" id="module-openerm.Config"><span id="config"></span></span><div class="section" id="id1">
<h1>Config</h1>
<p>Esta clase gestiona los archivos de configuración del proyecto Oerm. Se encarga
de la carga de los archivos .cfg (formato yaml), realiza la validación de cada
uno y devuelve un diccionario de datos para ser aprovechado luego.</p>
<dl class="class">
<dt id="openerm.Config.Config">
<em class="property">class </em><code class="descclassname">openerm.Config.</code><code class="descname">Config</code><span class="sig-paren">(</span><em>configfile</em>, <em>schema=None</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Config.xhtml#Config"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">object</span></code></p>
<p>Clase base para el manejo de configuraciones «jerarquicas».
:param configfile: Nombre del archivo físico de configuración a cargar
:type configfile: string
:param schema: Esquema de validación en formato yaml
:type schema: string</p>
<p class="rubric">Ejemplo</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">openerm.Database</span> <span class="k">import</span> <span class="n">Config</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">cfg</span> <span class="o">=</span> <span class="n">Config</span><span class="p">(</span><span class="s2">&quot;file.cfg&quot;</span><span class="p">,</span> <span class="n">schema_yaml</span><span class="p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class="exception">
<dt id="openerm.Config.ConfigLoadingException">
<em class="property">exception </em><code class="descclassname">openerm.Config.</code><code class="descname">ConfigLoadingException</code><span class="sig-paren">(</span><em>*args</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Config.xhtml#ConfigLoadingException"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code></p>
<p>Excepciones especiales para los cargadores de configuraciones</p>
</dd></dl>

<dl class="class">
<dt id="openerm.Config.LoadConfig">
<em class="property">class </em><code class="descclassname">openerm.Config.</code><code class="descname">LoadConfig</code><span class="sig-paren">(</span><em>configfile</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Config.xhtml#LoadConfig"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Bases: <a class="reference internal" href="#openerm.Config.Config" title="openerm.Config.Config"><code class="xref py py-class docutils literal notranslate"><span class="pre">openerm.Config.Config</span></code></a></p>
<p>Clase base para el manejo de la configuración del proceso de carga.</p>
</dd></dl>

</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>