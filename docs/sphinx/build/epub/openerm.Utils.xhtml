<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Utils</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <span class="target" id="module-openerm.Utils"><span id="utils"></span></span><div class="section" id="id1">
<h1>Utils</h1>
<p>Este módulo contiene todo tipo de funciones de uso general para el
proyecto <strong>OpenErm</strong></p>
<dl class="class">
<dt id="openerm.Utils.AutoNum">
<em class="property">class </em><code class="descclassname">openerm.Utils.</code><code class="descname">AutoNum</code><a class="reference internal" href="_modules/openerm/Utils.xhtml#AutoNum"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">object</span></code></p>
<p>Clase autonumeradora de valores</p>
<dl>
<dt>Ejemplo:</dt><dd><div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">openerm.Utils</span> <span class="k">import</span> <span class="o">*</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span> <span class="o">=</span> <span class="n">AutoNum</span><span class="p">()</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;Prueba&quot;</span><span class="p">)</span>
<span class="go">1</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;Otra cosa&quot;</span><span class="p">)</span>
<span class="go">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;Prueba&quot;</span><span class="p">)</span>
<span class="go">1</span>
</pre></div>
</div>
</dd>
</dl>
<dl class="method">
<dt id="openerm.Utils.AutoNum.get">
<code class="descname">get</code><span class="sig-paren">(</span><em>value</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#AutoNum.get"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Retorna el numerador de un determinado valor</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><p><strong>value</strong> (<em>any</em>) – valor a numerar</p>
</dd>
<dt class="field-even">Devuelve</dt>
<dd class="field-even"><p>Número único del valor</p>
</dd>
<dt class="field-odd">Tipo del valor devuelto</dt>
<dd class="field-odd"><p>int</p>
</dd>
</dl>
</dd></dl>

<dl class="method">
<dt id="openerm.Utils.AutoNum.list">
<code class="descname">list</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#AutoNum.list"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Retorna la lista completa de valores, numeradores</p>
<dl>
<dt>Ejemplo:</dt><dd><div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">openerm.Utils</span> <span class="k">import</span> <span class="o">*</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span> <span class="o">=</span> <span class="n">AutoNum</span><span class="p">()</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;Prueba&quot;</span><span class="p">)</span>
<span class="go">1</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;Otra cosa&quot;</span><span class="p">)</span>
<span class="go">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;Prueba&quot;</span><span class="p">)</span>
<span class="go">1</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">my_id</span><span class="o">.</span><span class="n">list</span><span class="p">()</span>
<span class="go">[(&#39;Otra cosa&#39;, 2), (&#39;Prueba&#39;, 1)]</span>
</pre></div>
</div>
</dd>
</dl>
<dl class="field-list simple">
<dt class="field-odd">Devuelve</dt>
<dd class="field-odd"><p>list</p>
</dd>
</dl>
</dd></dl>

</dd></dl>

<dl class="function">
<dt id="openerm.Utils.file_accessible">
<code class="descclassname">openerm.Utils.</code><code class="descname">file_accessible</code><span class="sig-paren">(</span><em>filepath</em>, <em>mode</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#file_accessible"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Verifica la accesibilidad de un archivo en un determinado modo de apertura.</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><p><strong>filepath</strong> (<em>string</em>) – </p>
</dd>
</dl>
</dd></dl>

<dl class="function">
<dt id="openerm.Utils.filesInPath">
<code class="descclassname">openerm.Utils.</code><code class="descname">filesInPath</code><span class="sig-paren">(</span><em>path</em>, <em>pattern='*.*'</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#filesInPath"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Retorna de forma recursiva los archivos que respetan un patrón</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>path</strong> (<em>string</em>) – Path principal</p></li>
<li><p><strong>pattern</strong> (<em>string</em>) – (Opcional) patrón a buscar, por defecto “<em>.</em>”</p></li>
</ul>
</dd>
</dl>
<dl>
<dt>Ejemplo:</dt><dd><div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">filesInPath</span><span class="p">(</span><span class="s2">&quot;c:&quot;</span><span class="p">,</span> <span class="s2">&quot;*.txt&quot;</span><span class="p">):</span>
<span class="gp">&gt;&gt;&gt; </span>    <span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</pre></div>
</div>
</dd>
</dl>
</dd></dl>

<dl class="function">
<dt id="openerm.Utils.generate_filename">
<code class="descclassname">openerm.Utils.</code><code class="descname">generate_filename</code><span class="sig-paren">(</span><em>mask</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#generate_filename"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Genera un nombre de archivo en función a una máscara</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><p><strong>mask</strong> (<em>string</em>) – Mascara usada</p>
</dd>
</dl>
</dd></dl>

<dl class="function">
<dt id="openerm.Utils.get_values_from_byte">
<code class="descclassname">openerm.Utils.</code><code class="descname">get_values_from_byte</code><span class="sig-paren">(</span><em>byte</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#get_values_from_byte"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Retorna dos valores de un byte empaquetado</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><p><strong>byte</strong> – Entero que represta un byte</p>
</dd>
</dl>
<dl class="simple">
<dt>Return</dt><dd><p>(v1, v2) Tupla con los dos valores enteros</p>
</dd>
</dl>
</dd></dl>

<dl class="function">
<dt id="openerm.Utils.set_byte_from_values">
<code class="descclassname">openerm.Utils.</code><code class="descname">set_byte_from_values</code><span class="sig-paren">(</span><em>value1</em>, <em>value2</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#set_byte_from_values"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Retorna un byte empaquetado a partir de dos valores</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>value1</strong> (<em>int</em>) – Entero 0 a 127</p></li>
<li><p><strong>value2</strong> (<em>int</em>) – Entero 0 a 127</p></li>
</ul>
</dd>
<dt class="field-even">Devuelve</dt>
<dd class="field-even"><p>byte</p>
</dd>
</dl>
</dd></dl>

<dl class="function">
<dt id="openerm.Utils.slugify">
<code class="descclassname">openerm.Utils.</code><code class="descname">slugify</code><span class="sig-paren">(</span><em>text</em>, <em>delim='-'</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#slugify"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Normaliza una cadena para ser usada como nombre de archivo.</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>text</strong> (<em>str</em>) – String a normalizar</p></li>
<li><p><strong>delim</strong> (<em>str</em>) – Caracter de reemplazo de aquellos no válidos</p></li>
</ul>
</dd>
</dl>
<dl>
<dt>Ejemplo:</dt><dd><div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">openerm.Utils</span> <span class="k">import</span> <span class="o">*</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">slugify</span><span class="p">(</span><span class="s2">&quot;Esto, no es válido como nombre de Archivo!&quot;</span><span class="p">,</span> <span class="s2">&quot;-&quot;</span><span class="p">)</span>
<span class="go">&#39;esto-no-es-valido-como-nombre-de-archivo&#39;</span>
</pre></div>
</div>
</dd>
</dl>
</dd></dl>

<dl class="function">
<dt id="openerm.Utils.str_to_list">
<code class="descclassname">openerm.Utils.</code><code class="descname">str_to_list</code><span class="sig-paren">(</span><em>str_value</em>, <em>maxvalue</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/openerm/Utils.xhtml#str_to_list"><span class="viewcode-link">[fuente]</span></a></dt>
<dd><p>Devuelve una lista de enteros a partir de un string</p>
<dl class="field-list simple">
<dt class="field-odd">Parámetros</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>str_value</strong> (<em>string</em>) – Cadena de números separados por , o -</p></li>
<li><p><strong>maxvalue</strong> (<em>int</em>) – Máximo valor que puede tener la lista</p></li>
</ul>
</dd>
</dl>
<dl>
<dt>Ejemplo:</dt><dd><div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">openerm.Utils</span> <span class="k">import</span> <span class="o">*</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">str_to_list</span><span class="p">(</span><span class="s2">&quot;1,2,3,4&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="go">[1, 2, 3, 4]</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">str_to_list</span><span class="p">(</span><span class="s2">&quot;1-6,9, 12-14&quot;</span><span class="p">,</span> <span class="mi">15</span><span class="p">)</span>
<span class="go">[1, 2, 3, 4, 5, 6, 9, 12, 13, 14]</span>
</pre></div>
</div>
</dd>
</dl>
</dd></dl>

</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>