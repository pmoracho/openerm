<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>openerm.Report</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Código fuente para openerm.Report</h1><div class="highlight"><pre>
<span></span><span class="c1"># -*- coding: utf-8 -*-</span>

<span class="c1"># Copyright (c) 2014 Patricio Moracho &lt;pmoracho@gmail.com&gt;</span>
<span class="c1">#</span>
<span class="c1"># Database.py</span>
<span class="c1">#</span>
<span class="c1"># This program is free software; you can redistribute it and/or</span>
<span class="c1"># modify it under the terms of version 3 of the GNU General Public License</span>
<span class="c1"># as published by the Free Software Foundation. A copy of this license should</span>
<span class="c1"># be included in the file GPL-3.</span>
<span class="c1">#</span>
<span class="c1"># This program is distributed in the hope that it will be useful,</span>
<span class="c1"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="c1"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the</span>
<span class="c1"># GNU Library General Public License for more details.</span>
<span class="c1">#</span>
<span class="c1"># You should have received a copy of the GNU General Public License</span>
<span class="c1"># along with this program; if not, write to the Free Software</span>
<span class="c1"># Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</span>

<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">Report</span>
<span class="sd">======</span>

<span class="sd">Este objeto representa un Reporte almacenado en un :class:`openerm.Database`.</span>

<span class="sd">Ejemplo:</span>

<span class="sd">Un reporte por su parte posee:</span>

<span class="sd">	* Páginas</span>
<span class="sd">	* Metadatos o atributos</span>

<span class="sd">.. seealso::</span>
<span class="sd">	* :class:`openerm.Reports`</span>
<span class="sd">	* :class:`openerm.Database`</span>

<span class="sd">&quot;&quot;&quot;</span>

<span class="k">try</span><span class="p">:</span>
	<span class="kn">import</span> <span class="nn">sys</span>
	<span class="kn">import</span> <span class="nn">gettext</span>
	<span class="kn">from</span> <span class="nn">gettext</span> <span class="k">import</span> <span class="n">gettext</span> <span class="k">as</span> <span class="n">_</span>
	<span class="n">gettext</span><span class="o">.</span><span class="n">textdomain</span><span class="p">(</span><span class="s1">&#39;openerm&#39;</span><span class="p">)</span>

	<span class="kn">import</span> <span class="nn">struct</span>
	<span class="kn">from</span> <span class="nn">openerm.Block</span> <span class="k">import</span> <span class="n">Block</span>
	<span class="kn">from</span> <span class="nn">openerm.PageContainer</span> <span class="k">import</span> <span class="n">PageContainer</span>
	<span class="kn">from</span> <span class="nn">openerm.MetadataContainer</span> <span class="k">import</span> <span class="n">MetadataContainer</span>

<span class="k">except</span> <span class="ne">ImportError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
	<span class="n">modulename</span> <span class="o">=</span> <span class="n">err</span><span class="o">.</span><span class="n">args</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">partition</span><span class="p">(</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">rpartition</span><span class="p">(</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
	<span class="nb">print</span><span class="p">(</span><span class="n">_</span><span class="p">(</span><span class="s2">&quot;No fue posible importar el modulo: </span><span class="si">%s</span><span class="s2">&quot;</span><span class="p">)</span> <span class="o">%</span> <span class="n">modulename</span><span class="p">)</span>
	<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>


<div class="viewcode-block" id="Report"><a class="viewcode-back" href="../../openerm.Report.xhtml#openerm.Report.Report">[documentos]</a><span class="k">class</span> <span class="nc">Report</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
	<span class="sd">&quot;&quot;&quot;Clase para el manejo de un Reporte OERM.</span>

<span class="sd">	Args:</span>
<span class="sd">		database: Objeto :class:`openerm.Database`</span>
<span class="sd">		idrpt (int): Identificador único del reporte en el Database</span>

<span class="sd">	Example:</span>
<span class="sd">		&gt;&gt;&gt; fuerom openerm.Database import Database</span>
<span class="sd">		&gt;&gt;&gt; from openerm.Report import Report</span>
<span class="sd">		&gt;&gt;&gt; db = Database(file = &quot;out/zstd-level-3-1-22.test.oerm&quot;, mode=&quot;rb&quot;)</span>
<span class="sd">		&gt;&gt;&gt; r = Report(db, 1)</span>
<span class="sd">		&gt;&gt;&gt; for page in r:</span>
<span class="sd">		...     print(page[0:10])</span>
<span class="sd">		...</span>
<span class="sd">		Pagina 1 -</span>
<span class="sd">		Pagina 2 -</span>
<span class="sd">		Pagina 3 -</span>
<span class="sd">		Pagina 4 -</span>
<span class="sd">		Pagina 5 -</span>
<span class="sd">		Pagina 6 -</span>
<span class="sd">		Pagina 7 -</span>
<span class="sd">		Pagina 8 -</span>
<span class="sd">		Pagina 9 -</span>
<span class="sd">		Pagina 10</span>
<span class="sd">		Pagina 11</span>

<span class="sd">	**data**:</span>
<span class="sd">		========= ================================================</span>
<span class="sd">		Tipo	  Detalle</span>
<span class="sd">		========= ================================================</span>
<span class="sd">		int       Id del reporte</span>
<span class="sd">		string    Nombre del reporte</span>
<span class="sd">		long      Offset al contenedor de metadatos</span>
<span class="sd">		long      Max cantidad de páginas en los PageContainers</span>
<span class="sd">		long      Offset al primer PageContainer</span>
<span class="sd">		list      Lista de Offsets a los PageContainers</span>
<span class="sd">		========= ================================================</span>

<span class="sd">	&quot;&quot;&quot;</span>
	<span class="c1"># def __init__(self, file, data):</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">database</span><span class="p">,</span> <span class="n">idrpt</span><span class="p">):</span>

		<span class="n">data</span> 						<span class="o">=</span> <span class="p">(</span><span class="n">idrpt</span><span class="p">,)</span> <span class="o">+</span> <span class="n">database</span><span class="o">.</span><span class="n">Index</span><span class="o">.</span><span class="n">reports</span><span class="p">[</span><span class="n">idrpt</span><span class="p">]</span>

		<span class="bp">self</span><span class="o">.</span><span class="n">file</span>					<span class="o">=</span> <span class="n">database</span><span class="o">.</span><span class="n">_file</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">id</span> 					<span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>							<span class="c1">#: id del reporte</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">nombre</span> 				<span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>							<span class="c1">#: Nombre del reporte</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">metadata_offset</span> 		<span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">max_pages_in_container</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">first_p_container</span> 		<span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">containers_offset</span>		<span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">total_containers</span>		<span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">containers_offset</span><span class="p">)</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">current_page</span>			<span class="o">=</span> <span class="mi">1</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">current_container</span>		<span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">current_block_data</span>		<span class="o">=</span> <span class="kc">None</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">block</span>					<span class="o">=</span> <span class="n">Block</span><span class="p">()</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">pagecontainer</span> 			<span class="o">=</span> <span class="n">PageContainer</span><span class="p">()</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">metadatacontainer</span>		<span class="o">=</span> <span class="n">MetadataContainer</span><span class="p">()</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">metadata</span>				<span class="o">=</span> <span class="p">{}</span>								<span class="c1">#: Metadatos del reporte</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">total_pages</span>			<span class="o">=</span> <span class="mi">0</span>									<span class="c1">#: Cantidad total de páginas del reporte</span>

		<span class="bp">self</span><span class="o">.</span><span class="n">_get_report_data</span><span class="p">()</span>

	<span class="k">def</span> <span class="nf">_get_block_data_from_container</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">container</span><span class="p">):</span>

		<span class="n">container_offset</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">containers_offset</span><span class="p">[</span><span class="n">container</span><span class="p">]</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_get_block_data_from_offset</span><span class="p">(</span><span class="n">container_offset</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">total_pages</span>

	<span class="k">def</span> <span class="nf">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span>

	<span class="k">def</span> <span class="nf">__next__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="n">p</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_page</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">current_page</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">p</span><span class="p">:</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">current_page</span> <span class="o">=</span> <span class="mi">1</span>
			<span class="k">raise</span> <span class="ne">StopIteration</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">current_page</span> <span class="o">+=</span> <span class="mi">1</span>
		<span class="k">return</span> <span class="n">p</span>

	<span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="s2">&quot;Report: </span><span class="si">{0}</span><span class="s2"> &quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">nombre</span><span class="p">)</span>

<div class="viewcode-block" id="Report.get_page"><a class="viewcode-back" href="../../openerm.Report.xhtml#openerm.Report.Report.get_page">[documentos]</a>	<span class="k">def</span> <span class="nf">get_page</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pagenum</span><span class="p">):</span>
		<span class="sd">&quot;&quot;&quot;Retorna una pagina del reporte</span>

<span class="sd">		Args:</span>
<span class="sd">			pagenum(int): Número de página</span>

<span class="sd">		Example:</span>
<span class="sd">			&gt;&gt;&gt; from openerm.Database import Database</span>
<span class="sd">			&gt;&gt;&gt; from openerm.Report import Report</span>
<span class="sd">			&gt;&gt;&gt; db = Database(file = &quot;out/zstd-level-3-1-22.test.oerm&quot;, mode=&quot;rb&quot;)</span>
<span class="sd">			&gt;&gt;&gt; r = Report(db, 1)</span>
<span class="sd">			&gt;&gt;&gt; p = r.get_page(5)</span>
<span class="sd">			&gt;&gt;&gt; print(p[0:30])</span>
<span class="sd">			Pagina 5 -----------------</span>
<span class="sd">			ZSV</span>
<span class="sd">			&gt;&gt;&gt;</span>

<span class="sd">		Return:</span>
<span class="sd">			string: Texto completo de la página</span>

<span class="sd">		&quot;&quot;&quot;</span>
		<span class="n">container</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">pagenum</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="bp">self</span><span class="o">.</span><span class="n">max_pages_in_container</span><span class="p">)</span>
		<span class="k">if</span> <span class="n">container</span> <span class="o">&gt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">total_containers</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
			<span class="k">return</span> <span class="kc">None</span>

		<span class="k">if</span> <span class="n">container</span> <span class="o">!=</span> <span class="bp">self</span><span class="o">.</span><span class="n">current_container</span><span class="p">:</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">current_block_data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_get_block_data_from_container</span><span class="p">(</span><span class="n">container</span><span class="p">)</span>
			<span class="c1"># (longitud_bloque, tipo_bloque, tipo_compresion, tipo_encriptacion, longitud_datos, data, variable_data)</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">pagecontainer</span><span class="o">.</span><span class="n">load</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">current_block_data</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="bp">self</span><span class="o">.</span><span class="n">current_block_data</span><span class="p">[</span><span class="mi">6</span><span class="p">]))</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">current_container</span> <span class="o">=</span> <span class="n">container</span>

		<span class="n">relative_pagenum</span> <span class="o">=</span> <span class="n">pagenum</span> <span class="o">-</span> <span class="p">(</span><span class="n">container</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">max_pages_in_container</span><span class="p">)</span>

		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pagecontainer</span><span class="o">.</span><span class="n">get_page</span><span class="p">(</span><span class="n">relative_pagenum</span><span class="p">)</span></div>

	<span class="k">def</span> <span class="nf">_get_report_data</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

		<span class="c1"># La cantidad de contenedores - 1 por la cantidad de paginas x contenedor da el primer número</span>
		<span class="n">last_container_offset</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">total_containers</span> <span class="o">-</span> <span class="mi">1</span>
		<span class="n">total</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">total_containers</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">max_pages_in_container</span>
		<span class="c1"># Leer el último contenedor para saber cuantas páginas quedaron en él</span>
		<span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_get_block_data_from_container</span><span class="p">(</span><span class="n">last_container_offset</span><span class="p">)</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">pagecontainer</span><span class="o">.</span><span class="n">load</span><span class="p">((</span><span class="n">data</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">data</span><span class="p">[</span><span class="mi">6</span><span class="p">]))</span>
		<span class="n">total</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pagecontainer</span><span class="p">)</span>

		<span class="bp">self</span><span class="o">.</span><span class="n">total_pages</span> <span class="o">=</span> <span class="n">total</span>

		<span class="c1"># Metadatos</span>
		<span class="n">_</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">tipo_compresion</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_get_block_data_from_offset</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">metadata_offset</span><span class="p">)</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">metadata</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">metadatacontainer</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
		<span class="bp">self</span><span class="o">.</span><span class="vm">__dict__</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">metadata</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">_get_block_data_from_offset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">container_offset</span><span class="p">):</span>

		<span class="bp">self</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">container_offset</span><span class="p">)</span>

		<span class="n">struct_fmt</span> <span class="o">=</span> <span class="s1">&#39;&gt;L&#39;</span>
		<span class="n">struct_len</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">struct_fmt</span><span class="p">)</span>
		<span class="n">struct_unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">Struct</span><span class="p">(</span><span class="n">struct_fmt</span><span class="p">)</span><span class="o">.</span><span class="n">unpack_from</span>

		<span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">struct_len</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">data</span><span class="p">:</span>
			<span class="k">return</span> <span class="kc">None</span>

		<span class="n">longitud_bloque</span> <span class="o">=</span> <span class="n">struct_unpack</span><span class="p">(</span><span class="n">data</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

		<span class="bp">self</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span> <span class="o">-</span> <span class="n">struct_len</span><span class="p">)</span>
		<span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">longitud_bloque</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">data</span><span class="p">:</span>
			<span class="k">return</span> <span class="kc">None</span>

		<span class="c1"># (longitud_bloque, tipo_bloque, tipo_compresion, tipo_encriptacion, longitud_datos, data, variable_data)</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">block</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<div class="viewcode-block" id="Report.find_text"><a class="viewcode-back" href="../../openerm.Report.xhtml#openerm.Report.Report.find_text">[documentos]</a>	<span class="k">def</span> <span class="nf">find_text</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
		<span class="sd">&quot;&quot;&quot;Búsqueda de un texto dentro del reporte</span>

<span class="sd">		Args:</span>
<span class="sd">			text (string): Patrón de texto a buscar</span>

<span class="sd">		Example:</span>
<span class="sd">			&gt;&gt;&gt; from openerm.Database import Database</span>
<span class="sd">			&gt;&gt;&gt; from openerm.Report import Report</span>
<span class="sd">			&gt;&gt;&gt; db = Database(file = &quot;out/.sin_compression_sin_encriptacion.oerm&quot;)</span>
<span class="sd">			&gt;&gt;&gt; r = Report(db, 1)</span>
<span class="sd">			&gt;&gt;&gt; report.find_text(&quot;IWY3&quot;)</span>
<span class="sd">			[(2, 10, 991, &#39;AGH8B2NULTCTJ0L-[IWY3]-4K6D8RRBYCRQCH&#39;)]</span>

<span class="sd">		Return:</span>
<span class="sd">			Lista de reportes y páginas</span>
<span class="sd">				* Reporte id</span>
<span class="sd">				* Página</span>
<span class="sd">				* Posición en la página</span>
<span class="sd">				* Extracto de la ocurrencia a modo de ejemplo</span>
<span class="sd">		&quot;&quot;&quot;</span>
		<span class="k">def</span> <span class="nf">sample</span><span class="p">(</span><span class="n">find</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">lfind</span><span class="p">):</span>

			<span class="n">start</span> 	<span class="o">=</span> <span class="n">pos</span> <span class="o">-</span> <span class="mi">15</span>
			<span class="n">end</span> 	<span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="n">lfind</span> <span class="o">+</span> <span class="mi">15</span>

			<span class="k">if</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
				<span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>

			<span class="k">if</span> <span class="n">end</span> <span class="o">&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
				<span class="n">end</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>

			<span class="k">return</span> <span class="n">text</span><span class="p">[</span><span class="n">start</span><span class="p">:</span><span class="n">pos</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&quot;-[&quot;</span> <span class="o">+</span> <span class="n">find</span> <span class="o">+</span> <span class="s2">&quot;]-&quot;</span> <span class="o">+</span> <span class="n">text</span><span class="p">[</span><span class="n">pos</span> <span class="o">+</span> <span class="n">lfind</span> <span class="o">+</span> <span class="mi">1</span><span class="p">:</span><span class="n">end</span><span class="p">]</span>

		<span class="n">lfind</span> 	<span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
		<span class="n">ocurrences</span> 	<span class="o">=</span> <span class="p">[]</span>
		<span class="k">for</span> <span class="n">np</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">total_pages</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
			<span class="n">p</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_page</span><span class="p">(</span><span class="n">np</span><span class="p">)</span>
			<span class="k">if</span> <span class="n">p</span><span class="p">:</span>
				<span class="n">pos</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
				<span class="k">while</span> <span class="n">pos</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
					<span class="n">sampletext</span> <span class="o">=</span> <span class="n">sample</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">lfind</span><span class="p">)</span>
					<span class="n">ocurrences</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">np</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">sampletext</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)))</span>
					<span class="n">pos</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">pos</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>

		<span class="k">return</span> <span class="n">ocurrences</span></div></div>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>