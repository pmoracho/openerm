<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>checkoermdb</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Código fuente para checkoermdb</h1><div class="highlight"><pre>
<span></span><span class="c1"># -*- coding: utf-8 -*-</span>

<span class="c1"># Copyright (c) 2014 Patricio Moracho &lt;pmoracho@gmail.com&gt;</span>
<span class="c1">#</span>
<span class="c1"># checkoermdb</span>
<span class="c1">#</span>
<span class="c1"># This program is free software; you can redistribute it and/or</span>
<span class="c1"># modify it under the terms of version 3 of the GNU General Public License</span>
<span class="c1"># as published by the Free Software Foundation. A copy of this license should</span>
<span class="c1"># be included in the file GPL-3.</span>
<span class="c1">#</span>
<span class="c1"># This program is distributed in the hope that it will be useful,</span>
<span class="c1"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="c1"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="c1"># GNU Library General Public License for more details.</span>
<span class="c1">#</span>
<span class="c1"># You should have received a copy of the GNU General Public License</span>
<span class="c1"># along with this program; if not, write to the Free Software</span>
<span class="c1"># Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</span>

<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">checkoermdb</span>
<span class="sd">===========</span>

<span class="sd">Verificación de databases Openermdb</span>

<span class="sd">&quot;&quot;&quot;</span>

<span class="n">__author__</span>		<span class="o">=</span> <span class="s2">&quot;Patricio Moracho &lt;pmoracho@gmail.com&gt;&quot;</span>
<span class="n">__appname__</span>		<span class="o">=</span> <span class="s2">&quot;checkoermdb&quot;</span>
<span class="n">__appdesc__</span>		<span class="o">=</span> <span class="s2">&quot;Verificador de archivos oerm&quot;</span>
<span class="n">__license__</span>		<span class="o">=</span> <span class="s1">&#39;GPL v3&#39;</span>
<span class="n">__copyright__</span>	<span class="o">=</span> <span class="s2">&quot;(c) 2016, </span><span class="si">%s</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">__author__</span><span class="p">)</span>
<span class="n">__version__</span> 	<span class="o">=</span> <span class="s2">&quot;0.9&quot;</span>
<span class="n">__date__</span>		<span class="o">=</span> <span class="s2">&quot;2016/07/14&quot;</span>


<span class="k">try</span><span class="p">:</span>
	<span class="kn">import</span> <span class="nn">gettext</span>
	<span class="kn">from</span> <span class="nn">gettext</span> <span class="k">import</span> <span class="n">gettext</span> <span class="k">as</span> <span class="n">_</span>
	<span class="n">gettext</span><span class="o">.</span><span class="n">textdomain</span><span class="p">(</span><span class="s1">&#39;openerm&#39;</span><span class="p">)</span>
<div class="viewcode-block" id="my_gettext"><a class="viewcode-back" href="../checkoermdb.xhtml#checkoermdb.my_gettext">[documentos]</a>	<span class="k">def</span> <span class="nf">my_gettext</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
		<span class="sd">&quot;&quot;&quot;my_gettext: Traducir algunas cadenas de argparse.&quot;&quot;&quot;</span>
		<span class="n">current_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;usage: &#39;</span><span class="p">:</span> <span class="s1">&#39;uso: &#39;</span><span class="p">,</span>
						<span class="s1">&#39;optional arguments&#39;</span><span class="p">:</span> <span class="s1">&#39;argumentos opcionales&#39;</span><span class="p">,</span>
						<span class="s1">&#39;show this help message and exit&#39;</span><span class="p">:</span> <span class="s1">&#39;mostrar esta ayuda y salir&#39;</span><span class="p">,</span>
						<span class="s1">&#39;positional arguments&#39;</span><span class="p">:</span> <span class="s1">&#39;argumentos posicionales&#39;</span><span class="p">,</span>
						<span class="s1">&#39;the following arguments are required: </span><span class="si">%s</span><span class="s1">&#39;</span><span class="p">:</span> <span class="s1">&#39;los siguientes argumentos son requeridos: </span><span class="si">%s</span><span class="s1">&#39;</span><span class="p">}</span>

		<span class="k">if</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">current_dict</span><span class="p">:</span>
			<span class="k">return</span> <span class="n">current_dict</span><span class="p">[</span><span class="n">s</span><span class="p">]</span>
		<span class="k">return</span> <span class="n">s</span></div>

	<span class="n">gettext</span><span class="o">.</span><span class="n">gettext</span> <span class="o">=</span> <span class="n">my_gettext</span>

	<span class="kn">import</span> <span class="nn">argparse</span>

	<span class="kn">import</span> <span class="nn">sys</span>
	<span class="kn">import</span> <span class="nn">time</span>
	<span class="kn">import</span> <span class="nn">os</span>
	<span class="kn">import</span> <span class="nn">struct</span>
	<span class="c1"># import time</span>

	<span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">)</span>
	<span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;..&#39;</span><span class="p">)</span>

	<span class="kn">from</span> <span class="nn">openerm.tabulate</span> <span class="k">import</span> <span class="n">tabulate</span>
	<span class="kn">from</span> <span class="nn">openerm.Block</span> <span class="k">import</span> <span class="n">Block</span>
	<span class="kn">from</span> <span class="nn">openerm.PageContainer</span> <span class="k">import</span> <span class="n">PageContainer</span>
	<span class="kn">from</span> <span class="nn">openerm.Utils</span> <span class="k">import</span> <span class="n">file_accessible</span>

<span class="k">except</span> <span class="ne">ImportError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
	<span class="n">modulename</span> <span class="o">=</span> <span class="n">err</span><span class="o">.</span><span class="n">args</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">partition</span><span class="p">(</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">rpartition</span><span class="p">(</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
	<span class="nb">print</span><span class="p">(</span><span class="n">_</span><span class="p">(</span><span class="s2">&quot;No fue posible importar el modulo: </span><span class="si">%s</span><span class="s2">&quot;</span><span class="p">)</span> <span class="o">%</span> <span class="n">modulename</span><span class="p">)</span>
	<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

<div class="viewcode-block" id="OermDataBase"><a class="viewcode-back" href="../checkoermdb.xhtml#checkoermdb.OermDataBase">[documentos]</a><span class="k">class</span> <span class="nc">OermDataBase</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>

	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">inputfile</span><span class="p">):</span>

		<span class="bp">self</span><span class="o">.</span><span class="n">filename</span>		<span class="o">=</span> <span class="n">inputfile</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">lines</span>			<span class="o">=</span> <span class="p">[]</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">current_line</span>	<span class="o">=</span> <span class="mi">0</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">current_page</span>	<span class="o">=</span> <span class="s2">&quot;&quot;</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">block</span>			<span class="o">=</span> <span class="n">Block</span><span class="p">()</span>

	<span class="k">def</span> <span class="nf">__enter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

		<span class="k">try</span><span class="p">:</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">open_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">filename</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s2">&quot;rb&quot;</span><span class="p">)</span>

			<span class="n">struct_fmt</span>	<span class="o">=</span> <span class="s2">&quot;&gt;4sB&quot;</span>
			<span class="n">struct_len</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">struct_fmt</span><span class="p">)</span>
			<span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">open_file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">struct_len</span><span class="p">)</span>

			<span class="n">struct_unpack</span>	<span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">Struct</span><span class="p">(</span><span class="n">struct_fmt</span><span class="p">)</span><span class="o">.</span><span class="n">unpack_from</span>
			<span class="n">magic_number</span>	<span class="o">=</span> <span class="n">struct_unpack</span><span class="p">(</span><span class="n">data</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s2">&quot;utf-8&quot;</span><span class="p">)</span>
			<span class="c1"># version			= struct_unpack(data)[1]</span>

			<span class="k">if</span> <span class="n">magic_number</span> <span class="o">!=</span> <span class="s2">&quot;oerm&quot;</span><span class="p">:</span>
				<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="n">_</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{0}</span><span class="s1"> no es un archivo oerm válido!&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">filename</span><span class="p">))</span>

		<span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
			<span class="nb">print</span><span class="p">(</span><span class="n">_</span><span class="p">(</span><span class="s2">&quot;Error al abrir el archivo: </span><span class="si">{0}</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>
			<span class="k">return</span> <span class="kc">None</span>

		<span class="k">return</span> <span class="bp">self</span>

	<span class="k">def</span> <span class="nf">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">open_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
		<span class="k">return</span> <span class="kc">True</span>

	<span class="k">def</span> <span class="nf">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span>

	<span class="k">def</span> <span class="nf">__next__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

		<span class="n">struct_fmt</span> <span class="o">=</span> <span class="s1">&#39;&gt;L&#39;</span>
		<span class="n">struct_len</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">struct_fmt</span><span class="p">)</span>
		<span class="n">struct_unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">Struct</span><span class="p">(</span><span class="n">struct_fmt</span><span class="p">)</span><span class="o">.</span><span class="n">unpack_from</span>

		<span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">open_file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">struct_len</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">data</span><span class="p">:</span>
			<span class="k">raise</span> <span class="ne">StopIteration</span>

		<span class="n">longitud_bloque</span> <span class="o">=</span> <span class="n">struct_unpack</span><span class="p">(</span><span class="n">data</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

		<span class="bp">self</span><span class="o">.</span><span class="n">open_file</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">open_file</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span><span class="o">-</span><span class="n">struct_len</span><span class="p">)</span>
		<span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">open_file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">longitud_bloque</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">data</span><span class="p">:</span>
			<span class="k">raise</span> <span class="ne">StopIteration</span>

		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">block</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">data</span><span class="p">)</span></div>


<div class="viewcode-block" id="init_argparse"><a class="viewcode-back" href="../checkoermdb.xhtml#checkoermdb.init_argparse">[documentos]</a><span class="k">def</span> <span class="nf">init_argparse</span><span class="p">():</span>
	<span class="sd">&quot;&quot;&quot;init_argparse: Inicializar parametros del programa.&quot;&quot;&quot;</span>
	<span class="n">cmdparser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">prog</span><span class="o">=</span><span class="n">__appname__</span><span class="p">,</span>
										<span class="n">description</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">%s</span><span class="se">\n</span><span class="si">%s</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">__appdesc__</span><span class="p">,</span> <span class="n">__copyright__</span><span class="p">),</span>
										<span class="n">epilog</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span>
										<span class="n">add_help</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
										<span class="n">formatter_class</span><span class="o">=</span><span class="k">lambda</span> <span class="n">prog</span><span class="p">:</span> <span class="n">argparse</span><span class="o">.</span><span class="n">HelpFormatter</span><span class="p">(</span><span class="n">prog</span><span class="p">,</span> <span class="n">max_help_position</span><span class="o">=</span><span class="mi">40</span><span class="p">)</span>
	<span class="p">)</span>

	<span class="n">cmdparser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;inputfile&#39;</span>				<span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">str</span><span class="p">,</span>  				<span class="n">action</span><span class="o">=</span><span class="s2">&quot;store&quot;</span>	 						<span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Archivo Excel de entrada&quot;</span><span class="p">)</span>
	<span class="n">cmdparser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-v&#39;</span><span class="p">,</span> <span class="s1">&#39;--version&#39;</span>     	<span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">&#39;version&#39;</span><span class="p">,</span> <span class="n">version</span><span class="o">=</span><span class="n">__version__</span>								<span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Mostrar el número de versión y salir&#39;</span><span class="p">)</span>
	<span class="k">return</span> <span class="n">cmdparser</span></div>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>

	<span class="n">cmdparser</span> <span class="o">=</span> <span class="n">init_argparse</span><span class="p">()</span>
	<span class="k">try</span><span class="p">:</span>
		<span class="n">args</span> <span class="o">=</span> <span class="n">cmdparser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
	<span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> <span class="n">msg</span><span class="p">:</span>
		<span class="n">args</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">msg</span><span class="p">))</span>

	<span class="n">test_file</span>		<span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">inputfile</span>

	<span class="k">if</span> <span class="ow">not</span> <span class="n">file_accessible</span><span class="p">(</span><span class="n">test_file</span><span class="p">,</span> <span class="s2">&quot;rb&quot;</span><span class="p">):</span>
		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Error: El archivo </span><span class="si">{0}</span><span class="s2"> no se ha encontrado o no es accesible para lectura&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">test_file</span><span class="p">))</span>
		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

	<span class="k">if</span> <span class="n">test_file</span><span class="p">:</span>
		<span class="n">size_test_file</span>	<span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">getsize</span><span class="p">(</span><span class="n">test_file</span><span class="p">)</span>

		<span class="n">resultados</span> <span class="o">=</span> <span class="p">[]</span>
		<span class="n">totales</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="n">bloques</span> <span class="o">=</span> <span class="mi">0</span>
		<span class="n">paginas</span> <span class="o">=</span> <span class="mi">0</span>

		<span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
		<span class="n">b</span> <span class="o">=</span> <span class="n">Block</span><span class="p">()</span>
		<span class="n">pg</span> <span class="o">=</span> <span class="n">PageContainer</span><span class="p">()</span>
		<span class="k">with</span> <span class="n">OermDataBase</span><span class="p">(</span><span class="n">test_file</span><span class="p">)</span> <span class="k">as</span> <span class="n">bloques</span><span class="p">:</span>
			<span class="k">for</span> <span class="n">bloque</span> <span class="ow">in</span> <span class="n">bloques</span><span class="p">:</span>

				<span class="n">longitud_bloque</span><span class="p">,</span> <span class="n">tipo_bloque</span><span class="p">,</span> <span class="n">tipo_compresion</span><span class="p">,</span> <span class="n">tipo_encriptacion</span><span class="p">,</span> <span class="n">longitud_datos</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">variable_data</span> <span class="o">=</span> <span class="n">bloque</span>
				<span class="n">resultados</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">longitud_bloque</span><span class="p">,</span> <span class="n">tipo_bloque</span><span class="p">,</span> <span class="n">tipo_compresion</span><span class="p">,</span> <span class="n">tipo_encriptacion</span><span class="p">,</span> <span class="n">longitud_datos</span><span class="p">])</span>
				<span class="k">if</span> <span class="n">tipo_bloque</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
					<span class="n">pg</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
					<span class="n">paginas</span> <span class="o">+=</span> <span class="n">pg</span><span class="o">.</span><span class="n">max_page_count</span>
					<span class="n">k</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">{0}</span><span class="s2">. </span><span class="si">{1}</span><span class="s2"> comprimido con </span><span class="si">{2}</span><span class="s2"> (páginas: </span><span class="si">{3}</span><span class="s2">)&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">tipo_bloque</span><span class="p">,</span> <span class="n">b</span><span class="o">.</span><span class="n">block_types</span><span class="p">[</span><span class="n">tipo_bloque</span><span class="p">],</span> <span class="n">b</span><span class="o">.</span><span class="n">compressor</span><span class="o">.</span><span class="n">available_types</span><span class="p">[</span><span class="n">tipo_compresion</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">pg</span><span class="o">.</span><span class="n">max_page_count</span><span class="p">)</span>
				<span class="k">else</span><span class="p">:</span>
					<span class="n">k</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">{0}</span><span class="s2">. </span><span class="si">{1}</span><span class="s2"> comprimido con </span><span class="si">{2}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">tipo_bloque</span><span class="p">,</span> <span class="n">b</span><span class="o">.</span><span class="n">block_types</span><span class="p">[</span><span class="n">tipo_bloque</span><span class="p">],</span> <span class="n">b</span><span class="o">.</span><span class="n">compressor</span><span class="o">.</span><span class="n">available_types</span><span class="p">[</span><span class="n">tipo_compresion</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span>
				<span class="n">totales</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="p">,</span>  <span class="n">totales</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)),</span> <span class="p">(</span><span class="n">longitud_bloque</span><span class="p">,</span> <span class="mi">1</span><span class="p">)))</span>

		<span class="n">elapsed</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">start</span>

		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Archivo          : </span><span class="si">{0}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">test_file</span><span class="p">))</span>
		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Tamaño en bytes  : </span><span class="si">{:,.0f}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">size_test_file</span><span class="p">))</span>
		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Total de paginas : </span><span class="si">{:,.0f}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">paginas</span><span class="p">))</span>
		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Tiempo de lectura: </span><span class="si">{:,.2f}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">elapsed</span><span class="p">))</span>
		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Tiempo por pag.  : </span><span class="si">{:,.8f}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">elapsed</span><span class="o">/</span><span class="n">paginas</span><span class="p">))</span>
		<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Páginas/Segundos : </span><span class="si">{:,.0f}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">paginas</span><span class="o">/</span><span class="n">elapsed</span><span class="p">))</span>

		<span class="n">lista</span> <span class="o">=</span> <span class="p">[(</span><span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">totales</span><span class="o">.</span><span class="n">items</span><span class="p">()]</span>
		<span class="k">if</span> <span class="n">lista</span><span class="p">:</span>
			<span class="n">tablestr</span> <span class="o">=</span> <span class="n">tabulate</span><span class="p">(</span>
							<span class="n">tabular_data</span>		<span class="o">=</span> <span class="n">lista</span><span class="p">,</span>
							<span class="n">headers</span>				<span class="o">=</span> <span class="p">[</span><span class="s2">&quot;Tipo bloque&quot;</span><span class="p">,</span> <span class="s2">&quot;Tamaño total&quot;</span><span class="p">,</span> <span class="s2">&quot;Cantidad&quot;</span><span class="p">,</span> <span class="s2">&quot;Bytes promedio por bloque&quot;</span> <span class="p">],</span>
							<span class="n">floatfmt</span>			<span class="o">=</span> <span class="s2">&quot;,.2f&quot;</span><span class="p">,</span>
							<span class="n">tablefmt</span>			<span class="o">=</span> <span class="s2">&quot;psql&quot;</span><span class="p">,</span>
							<span class="n">numalign</span>			<span class="o">=</span> <span class="s2">&quot;right&quot;</span><span class="p">,</span>
							<span class="n">stralign</span>			<span class="o">=</span> <span class="s2">&quot;left&quot;</span><span class="p">,</span>
							<span class="n">override_cols_fmt</span>	<span class="o">=</span> <span class="p">[</span><span class="kc">None</span><span class="p">,</span> <span class="s2">&quot;,.0f&quot;</span><span class="p">,</span> <span class="s2">&quot;,.0f&quot;</span><span class="p">,</span> <span class="s2">&quot;,.2f&quot;</span><span class="p">]</span>
			 <span class="p">)</span>
			<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
			<span class="nb">print</span><span class="p">(</span><span class="n">tablestr</span><span class="p">)</span>
			<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>